name: Build & Deploy to EC2 (Build â†’ Deploy)

on:
  push:
    branches: [ main ]   # change if needed

jobs:
  build:
    name: Build & package artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Prepare site directory (copy only needed files)
        run: |
          mkdir -p site
          # copy repository files except VCS & workflow dir
          rsync -av --exclude='.git' --exclude='.github' --exclude='node_modules' ./ site/

      - name: Upload site artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-files
          path: site

  deploy:
    name: Deploy artifact to EC2
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: site-files
          path: site

      - name: Write SSH key and set permissions
        run: |
          # write private key from secret to file (preserves newlines)
          printf "%s\n" "${{ secrets.EC2_SSH_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key

      - name: Ensure rsync is available
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Rsync files to EC2 web root
        env:
          SSH_USER: ${{ secrets.EC2_USER }}
          SSH_HOST: ${{ secrets.EC2_HOST }}
          SSH_PORT: ${{ secrets.EC2_SSH_PORT }}
          TARGET_DIR: /var/www/subway
        run: |
          rsync -avz --delete -e "ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p ${SSH_PORT:-22}" ./site/ ${SSH_USER}@${SSH_HOST}:${TARGET_DIR}/

      - name: Test nginx config and reload on EC2
        env:
          SSH_USER: ${{ secrets.EC2_USER }}
          SSH_HOST: ${{ secrets.EC2_HOST }}
          SSH_PORT: ${{ secrets.EC2_SSH_PORT }}
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p ${SSH_PORT:-22} ${SSH_USER}@${SSH_HOST} \
            "sudo nginx -t && sudo systemctl reload nginx || sudo systemctl start nginx"
